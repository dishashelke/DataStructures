//m(j) = maximum subsequence ending at j
//m(j) = max {m(j-1)+A[j], A[j]}

package maximumContiguousSubsequence;

import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;

public class MCS {

	public static int maxSubsequence(int[] array) {
		int m[] = {};
		int  max =  array[0];
		m[0] = array[0];
		for(int j = 1; j<array.length; j++) {
			m[j] = m[j-1]+ array[j] > array[j] ?  m[j-1]+ array[j]  : array[j]; 
			if(m[j] > max)
				max = m[j];
		}
		return max;
	}
	
	public static void main(String[] args) {
		int[] array = {-2, 1, -3, 4, -1, 2, 1, -5, 4};
		System.out.print(maxSubsequence(array));
	}

}
