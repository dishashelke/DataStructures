package BinaryTree;


public class Operations {

	/*
	 * Given a binary tree find a path with maximum path sum. Path may start and end at any node(not necessary to start or end at leaf or root)
	 * http://www.geeksforgeeks.org/find-maximum-path-sum-in-a-binary-tree/
	 * For each node there can be four ways that the max path goes through the node:
	 * 1. Node only
	 * 2. Max path through Left Child + Node
	 * 3. Max path through Right Child + Node
	 * 4. Max path through Left Child + Node + Max path through Right Child
	 */
	public static int maxSumOfPath(BinaryTree tree) {
		int maxSum = Integer.MIN_VALUE;
		BinaryNode root = tree.getRoot();
		maxSumOfPath(root,);
	}
	
	public static void main(String args[]) {
		BinaryTree tree = new BinaryTree();
		tree.createTree();
	}
}
