package RabinKarp;

public class RabinKarp {
	
	private static int hash(String string)
	{
		System.out.print(string+"\n");
		int hash = 0;
		for(int i = 0; i < string.length(); i++)
			hash += string.charAt(i);
		return hash;
	}
	private static int rolledHash(char newChar, char oldChar,int oldHash)
	{
		return (oldHash -  oldChar + newChar);
	}
	public static int substring(String text, String pattern){
		int hPattern = hash(pattern);
		int hText = hash(text.substring(0, pattern.length()));
		/*for(int i = 0 ; i < (text.length() - pattern.length()) ; i++){
			if(hPattern == hText){//check if strings match
				//if(equal(text.copyValueOf(text, 0, pattern.length()), pattern))
					return i;
			}
			hText = rolledHash(text.charAt(i+pattern.length()), text.charAt(i), hText);
		}*/
		return -1;
	}

	public static void main(String[] args) {
		String text = "However, there are two problems with this. First, because there are so many different strings";
		String pattern = "are";
		System.out.print(substring(text, pattern));
	}

}
